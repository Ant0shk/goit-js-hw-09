{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAuBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvBC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GAEjBA,E,IA/BMO,SAASC,cAAc,QAC/BC,iBAAiB,UACtB,SAAuBC,GACrBA,EAAMC,iBACN,IAAIC,EAAQC,OAAOH,EAAMI,cAAcC,SAASf,MAAMgB,OAChDC,EAAOJ,OAAOH,EAAMI,cAAcC,SAASE,KAAKD,OAChDE,EAASL,OAAOH,EAAMI,cAAcC,SAASG,OAAOF,OAC1DpB,EAAAuB,OAAOC,QAAQ,eAAyBC,OAAVT,EAAM,MAAaS,OAATJ,EAAK,MAAWI,OAAPH,IACjD,IAAK,IAAII,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAEhCxB,EAAcwB,EAAGV,GACdW,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,QAAQC,IAAI,uBAAwCL,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OAC1DJ,EAAAuB,OAAOQ,QAAQ,uBAAwCN,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,QAAQC,IAAI,sBAAuCL,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,OACzDJ,EAAAuB,OAAOU,QAAQ,sBAAqCR,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAE9DY,GAAOK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst form = document.querySelector('form');\nform.addEventListener('submit', handlerSubmit);\nfunction handlerSubmit(event) {\n  event.preventDefault();\n  let delay = Number(event.currentTarget.elements.delay.value);\n  const step = Number(event.currentTarget.elements.step.value);\n  const amount = Number(event.currentTarget.elements.amount.value);\n  Notify.warning(`Get valuve: ${delay}, ${step}, ${amount}`);\n  for (let i = 1; i <= amount; i += 1) {\n    \n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    delay+=step;\n    }\n }\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.5;\n      if (shouldResolve) {\n        res({ position, delay });\n      } else {\n        rej({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","Number","currentTarget","elements","value","step","amount","Notify","warning","concat","i","then","param","console","log","success","catch","failure"],"version":3,"file":"03-promises.025902e5.js.map"}